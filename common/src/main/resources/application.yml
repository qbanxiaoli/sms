spring:
  # 默认使用dev环境
  profiles:
    active: @spring.profiles.active@
  # i18n configuration(添加语言国际化支持)
  messages:
    basename: i18n/messages
  # 时间戳统一转换
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  # 不检查/templates/模板路径
  freemarker:
    checkTemplateLocation: false
  jpa:
    # Specify the DBMS
    database: MYSQL
    # Show or not log for each sql query
    show-sql: true
    hibernate:
      # Hibernate ddl auto (create, create-drop, update)
      # create：每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
      # create-drop ：每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
      # update：最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。
      # validate ：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
      ddl-auto: update
      naming:
        # 遇到大写字母 加”_”的命名
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
    # 使用支持事务的数据库方言
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    open-in-view: true

# pagehelper分页插件
pagehelper:
  # 配置数据库方言，不配置也行，分页插件会自动检测当前的数据库链接，自动选择合适的分页方式，
  # 使用 SqlServer2012 数据库时，需要手动指定为 sqlserver2012，否则会使用 SqlServer2005 的方式进行分页。
  helper-dialect: mysql
  # 分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页，
  # pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询。
  reasonable: true
  # 默认值为 false，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit = 0 ,
  # 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）
  page-size-zero: true

mybatis:
  configuration:
    # 开启驼峰命名转换
    map-underscore-to-camel-case: true
  mapper-locations: classpath:mapper/*.xml

security:
  oauth2:
    sso:
      login-path: /login
    client:
      client-id: client
      client-secret: toolsecret
      access-token-uri: http://localhost:8081/oauth/token
      user-authorization-uri: http://localhost:8081/oauth/authorize
    resource:
      user-info-uri: http://localhost:1111
      prefer-token-info: false
      jwt:
        key-uri: http://localhost:8081/oauth/token_key
        key-value: |
          -----BEGIN CERTIFICATE-----
          MIIDbTCCAlWgAwIBAgIECFdStTANBgkqhkiG9w0BAQsFADBnMQswCQYDVQQGEwJV
          UzEOMAwGA1UECBMFU3RhdGUxDTALBgNVBAcTBENpdHkxFTATBgNVBAoTDE9yZ2Fu
          aXphdGlvbjENMAsGA1UECxMEVW5pdDETMBEGA1UEAxMKV2ViIFNlcnZlcjAeFw0x
          ODEyMTMxNDU3MDJaFw0xOTAzMTMxNDU3MDJaMGcxCzAJBgNVBAYTAlVTMQ4wDAYD
          VQQIEwVTdGF0ZTENMAsGA1UEBxMEQ2l0eTEVMBMGA1UEChMMT3JnYW5pemF0aW9u
          MQ0wCwYDVQQLEwRVbml0MRMwEQYDVQQDEwpXZWIgU2VydmVyMIIBIjANBgkqhkiG
          9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwafLDxERCDcTzZ1dla9RYvG4dwKJmceKSc/c
          ZSxkPcS6GVVvvh0//bO3ymxLLcCf5fYzVMxJwb+QBsrJZWcf5CsRqT1CmoV3BaUw
          hgKHiygR4XfvNoFXk6D5ws+ANXTS8q66WgrDphmWwCPXSmVBJw7ln/026F7sDDNz
          vUQtNeDHy1uu4OdU1kS++tv09D6+uhhAaiElU/rtDuJ0F0+1Q/Qgc6fCzaoxs5gz
          Cj6BiUJ1muTrXkoUacD5KanJ9qT1RKvMRaODJp/ya4DyDRk2E6hbUhSKay0YUnr9
          lF5zPZSeBraN6+v85pKzBXa6iejn+/ieK1fWByX7qEZnMzTwNQIDAQABoyEwHzAd
          BgNVHQ4EFgQU7NddWW1zgInW3aqeyevLsGq60mUwDQYJKoZIhvcNAQELBQADggEB
          AEPNk8Ok6/12bl8WV6onT5GXDUzVH9LdX7aAxlt6yAx/YGPN8/LjzxfQPv3z2BK1
          4r2pk+J1tgtB8CnTTq/k8EjKqAh2OsgRXDke1Y4q/SgmERnm0VW/5vL3kGWlyefO
          RPYXnL1jPGx+u2vlGGryHjKGFE0or7Ao7hE4eSLmg+xlbf2oL4gnJYqtzUL2rCs6
          EymdWK720BpblRiS8oo1qG7uRoZqboCCi5hRhZXVKrwJky92jkVeO7gwyIaYS5Ag
          EEEI0xJr35nVk40+eCw21TUULILxxKtBCXeQrah0SbmJsAcFccwfkrCFUxMVOJ4Z
          xIEdpg1ladF39e6Jy+pon8I=
          -----END CERTIFICATE-----
