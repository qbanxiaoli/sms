<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>config</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>config</name>
	<description>config project for Spring Boot</description>

	<parent>
		<groupId>com</groupId>
		<artifactId>sms-cloud</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<dependencies>
		<!-- 本模块作为配置中心，故添加spring-cloud-starter-netflix-eureka-server依赖 -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-config-server</artifactId>
		</dependency>
		<!-- 本模块需要作为一个微服务应用向服务中心发布自己，故添加spring-cloud-starter-netflix-eureka-client依赖 -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<!-- 本模块需要进行安全认证，故添加spring-cloud-starter-security依赖 -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-security</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>1.0.0</version>
				<configuration>
					<!--指定镜像名称 仓库/镜像名:标签-->
					<imageName>${docker.repository}/${docker.registry.name}/${project.artifactId}:${project.version}</imageName>
					<!--指定基础镜像，相当于dockerFile中的FROM<image> -->
					<baseImage>java:8</baseImage>
					<!-- 容器启动执行的命令，相当于dockerFile的ENTRYPOINT -->
					<entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
					<resources>
						<resource><!-- 指定资源文件 -->
							<targetPath>/</targetPath><!-- 指定要复制的目录路径，这里是当前目录 -->
							<directory>${project.build.directory}</directory><!-- 指定要复制的根目录，这里是target目录 -->
							<include>${project.build.finalName}.jar</include><!-- 指定需要拷贝的文件，这里指最后生成的jar包 -->
						</resource>
					</resources>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
